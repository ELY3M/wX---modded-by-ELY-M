//modded by ELY M.
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace 'joshuatee.wx'
//    compileSdkVersion 33
//    buildToolsVersion '33.0.1'

//    buildFeatures {
//        compose true
//    }
//
//    composeOptions {
//        // https://developer.android.com/jetpack/androidx/releases/compose-compiler
//        kotlinCompilerExtensionVersion = "1.5.11"
//    }

    defaultConfig {
        compileSdk 35
//        compileSdkPreview "Baklava"
    }

    defaultConfig {
        applicationId "joshuatee.wx"
        // 2023-09-09 changed from 23 to 25
        minSdkVersion 27
        targetSdkVersion 35
//        targetSdkPreview 'Baklava'

        // Stops the Gradle pluginâ€™s automatic rasterization of vectors (2016_02_25 add 23.2 )
        // vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    sourceSets {
        main {
            //disable automatic ndk-build
            jniLibs.srcDir 'src/main/libs'
        }
    }

/*
    def ndkDir = "D:\\android-sdk\\android-ndk-r27c"
    tasks.register('buildNative', Exec) {
        commandLine "$ndkDir\\ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath,
                '-Wl,-z,max-page-size=16384',
                '-j', Runtime.runtime.availableProcessors(),
                'all'
    }

//    defaultConfig {
//        ...
//        // This block is different from the one you use to link Gradle
//        // to your CMake or ndk-build script.
//        externalNativeBuild {
//            // For ndk-build, instead use the ndkBuild block.
//            cmake {
//                // Passes optional arguments to CMake.
//                arguments "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
//            }
//        }
//    }

    tasks.register('cleanNative', Exec) {
        commandLine "$ndkDir\\ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath,
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile).configureEach {
        compileTask -> compileTask.dependsOn buildNative
    }

*/


    // required to support API 35+ 16KB page sizes
    // see https://developer.android.com/guide/practices/page-sizes#build
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
    }


    // Flag to tell aapt to keep the attribute ids around - (2016_02_25 add 23.2 )

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        disable 'Typos'
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }
//    androidResources {
//        additionalParameters '--no-version-vectors'
//    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'Typos'
    }
//    compileSdkPreview 'Baklava'
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2'
    // https://developer.android.com/jetpack/androidx/versions
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.media:media:1.7.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    // graphview source code was merged locally into project on 2023-12-30
//    implementation 'com.jjoe64:graphview:4.2.2'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.14"

    // https://developer.android.com/studio/write/java8-support
    // https://developer.android.com/studio/write/java8-support-table
    // https://developer.android.com/reference/java/time/package-summary
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

    //elys mods
    implementation 'ch.acra:acra-mail:5.9.7'
    implementation 'ch.acra:acra-core:5.9.7'
    implementation 'com.markodevcic:peko:3.0.1'
    implementation 'org.shredzone.commons:commons-suncalc:3.5'
    implementation 'com.github.HBiSoft:HBRecorder:3.0.3'

//    def composeBom = platform('androidx.compose:compose-bom:2024.03.00')
//    implementation composeBom
////    androidTestImplementation composeBom
//
//    // Choose one of the following:
//    // Material Design 3
//    implementation 'androidx.compose.material3:material3'
////    // or Material Design 2
////    implementation 'androidx.compose.material:material'
////    // or skip Material Design and build directly on top of foundational components
////    implementation 'androidx.compose.foundation:foundation'
////    // or only import the main APIs for the underlying toolkit systems,
////    // such as input and measurement/layout
////    implementation 'androidx.compose.ui:ui'
//
//    // Android Studio Preview support
//    implementation 'androidx.compose.ui:ui-tooling-preview'
//    debugImplementation 'androidx.compose.ui:ui-tooling'
//
//    // UI Tests
////    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
////    debugImplementation 'androidx.compose.ui:ui-test-manifest'
//
//    // Optional - Included automatically by material, only add when you need
//    // the icons but not the material library (e.g. when using Material3 or a
//    // custom design system based on Foundation)
//    implementation 'androidx.compose.material:material-icons-core'
//    // Optional - Add full set of material icons
//    implementation 'androidx.compose.material:material-icons-extended'
//    // Optional - Add window size utils
//    implementation 'androidx.compose.material3:material3-window-size-class'
//
//    // Optional - Integration with activities
//    implementation 'androidx.activity:activity-compose:1.8.2'
//    // Optional - Integration with ViewModels
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
////    // Optional - Integration with LiveData
////    implementation 'androidx.compose.runtime:runtime-livedata'
////    // Optional - Integration with RxJava
////    implementation 'androidx.compose.runtime:runtime-rxjava2'
}

repositories {
    mavenCentral()
    google()
    maven {
        url "https://maven.google.com"
    }
}
